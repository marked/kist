#!/usr/bin/perl
use warnings;
use strict;

my $ROOT;
BEGIN { 
  my (@dirs) = split "/", $0 ;
  pop(@dirs);
  if (readlink($0)) {
    push(@dirs,split "/", readlink($0)) ;
    pop(@dirs);
  }
  $ROOT = join( "/", @dirs);
}
use lib $ROOT;

use Common;
use Conf;

my $pIP = "";
if (@ARGV > 0) {
  $pIP = shift(@ARGV);
  $pIP =~ s/host=//i;
  $IP = $pIP;
} else {
  # 0 arguments requred.  host optionally comes from Conf.pm
  # die "Usage: $0 [Host=DvrIP] [Query=val] [RenderKey=val]\n";
}

my $params = "";
if (@ARGV > 0) {
  $params .= '&' .  shift(@ARGV);
}
if ($params !~ 'Container=') {
  $params .= '&' . $param_np;
}

my $xsl = "";
if (! $xsl) {
  if ($0 =~ /[a-zA-Z_]+\.([a-zA-Z0-9]+)/) {
    if ($1 !~ /xml/) {
      $xsl = $1;
    }
  }
}
for (my $a=0; $a < @ARGV; $a++) {
  $ARGV[$a] = "'$ARGV[$a]'";
}

my $transform1_cmd = "xsltproc $XSL_DIR/$xsl.xsl - " . join(' ', @ARGV);
my $transform2_cmd = "saxonb-xslt -xsl:$XSL_DIR/$xsl.xsl -s:- " . join(' ', @ARGV);

my $url = "https://$IP$np_xml_path$params";

my $fetch_cmd = "curl -s -u \"tivo:$MAK\" -b'sid=abc' -k --digest ";
my $post_cmd = '';

foreach my $f (`ls $BIN_DIR/post_filters`) {
  chomp $f;
  $post_cmd .= " | $BIN_DIR/post_filters/$f";
}

if ($xsl) {
  $post_cmd .= " | $transform2_cmd";
}

warn "$fetch_cmd '$url' $post_cmd\n";
my $xml = `$fetch_cmd '$url' $post_cmd`;
print $xml;

if (0) {
  print "$fetch_cmd '$url' $post_cmd";
}
